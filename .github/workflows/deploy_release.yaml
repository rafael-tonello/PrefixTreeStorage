#a git hub action to deploy to repository 'releases' sections
name: PrefixTreeStorage - deploy release
run-name: Deploying a release
on:
  push:
    tags:
      - 'v*'

permissions: write-all

jobs: 
  prepare-release:
    name: Deploy release
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Install dependencies
        run: |
          #check if sudo is installed
          if ! [ -x "$(command -v sudo)" ]; then
            echo "sudo is not installed. Installing sudo..."
            apt update -y > /dev/null 2>&1
            apt install sudo -y
            sudo apt update -y
          fi
          sudo apt update -y
          sudo apt install -y make llvm clang git libssl-dev

      

      - name: Building ...
        run: |
          export TERM=xterm
          backFolder=$(pwd)
          git submodule update --init --recursive

          echo "Building library..."

          cd library
          rm -rf build
          make all
          cd $backFolder

          echo "Building command line tool ..."
          cd command
          rm -rf build
          make all
          cd $backFolder




      - name: saving files to a tar.gz
        #run tar -czf, excluding .git and .github folders
        run: |
          currentFolderName=${PWD##*/}
          currFolder=$(pwd)
          ls -lha
          cd ..
          ls -lha
          deployFolderName="PrefixTreeStorage-${{ github.ref_name }}"
          destinationFileName="PrefixTreeStorage-${{ github.ref_name }}.tar.gz "
          mkdir -p $deployFolderName
          echo ------------------------ $deployFolderName content -----------------------------
          ls -lha "$deployFolderName"

          echo "reponame: $currentFolderName"
          echo "destination-filename: $destinationFileName"

          rm -rf "$currentFolderName/command/build/objects"
          rm -rf "$currentFolderName/library/build/objects"
        
          echo "copying files from $currentFolderName/command/build to $deployFolderName/command"
          echo -------------------------- command content ---------------------------
          ls -lha "$currentFolderName/command"

          cp -r "$currentFolderName/command/build" "$deployFolderName/"
          mv "$deployFolderName/build" "$deployFolderName/command"

          echo -----------------------------------------------------
          ls -lha "$deployFolderName"

          cp -r "$currentFolderName/library/build" "$deployFolderName/"
          mv "$deployFolderName/build" "$deployFolderName/library"

          echo -----------------------------------------------------
          ls -lha "$deployFolderName"


          cp "$currentFolderName/CHANGELOG.md" "$deployFolderName/"

          echo -----------------------------------------------------
          ls -lha "$deployFolderName"
          
          echo "Packing the folder $deployFolderName $destinationFileName file"
          tar -czf $destinationFileName $deployFolderName
          
          mv $destinationFileName $currFolder/
          cd $currFolder
          echo ============= final folder content =================
          ls -lha

      - name: Create Release
        id: create_release2
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false
          body_path: CHANGELOG.md

      - name: Upload Release Asset
        id: upload-release-asset 
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release2.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
          asset_path: ./PrefixTreeStorage-${{ github.ref_name }}.tar.gz
          asset_name: PrefixTreeStorage-${{ github.ref_name }}.tar.gz
          asset_content_type: application/x-gzip
